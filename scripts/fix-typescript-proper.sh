#!/bin/bash

echo "üîß –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º TypeScript –æ—à–∏–±–∫–∏..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/WebApp

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –≤ server/src/routes/admin.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º admin.ts..."
# –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ req –Ω–∞ _req
sed -i 's/async (req, res, next) => {/async (_req, res, next) => {/g' server/src/routes/admin.ts
# –ù–æ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å req –æ–±—Ä–∞—Ç–Ω–æ —Ç–∞–º –≥–¥–µ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
sed -i 's/const { stock } = _req.body;/const { stock } = req.body;/g' server/src/routes/admin.ts
sed -i 's/const { id } = _req.params;/const { id } = req.params;/g' server/src/routes/admin.ts
sed -i 's/const data = createCategorySchema.parse(_req.body);/const data = createCategorySchema.parse(req.body);/g' server/src/routes/admin.ts
sed -i 's/const data = updateCategorySchema.parse(_req.body);/const data = updateCategorySchema.parse(req.body);/g' server/src/routes/admin.ts
sed -i 's/const data = createMediaSchema.parse(_req.body);/const data = createMediaSchema.parse(req.body);/g' server/src/routes/admin.ts
sed -i 's/const { order } = _req.body;/const { order } = req.body;/g' server/src/routes/admin.ts
sed -i 's/const { mediaIds } = _req.body;/const { mediaIds } = req.body;/g' server/src/routes/admin.ts
sed -i 's/const { productIds, categoryIds, ...data } = createDiscountSchema.parse(_req.body);/const { productIds, categoryIds, ...data } = createDiscountSchema.parse(req.body);/g' server/src/routes/admin.ts
sed -i 's/const { productIds, categoryIds, ...data } = updateDiscountSchema.parse(_req.body);/const { productIds, categoryIds, ...data } = updateDiscountSchema.parse(req.body);/g' server/src/routes/admin.ts
sed -i 's/const query = orderQuerySchema.parse(_req.query);/const query = orderQuerySchema.parse(req.query);/g' server/src/routes/admin.ts
sed -i 's/const { status } = _req.body;/const { status } = req.body;/g' server/src/routes/admin.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –≤ server/src/routes/catalog.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º catalog.ts..."
sed -i 's/async (_req, res, next) => {/async (req, res, next) => {/g' server/src/routes/catalog.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –≤ server/src/routes/order.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º order.ts..."
# –ù–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ–º, —Ç–∞–º –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –≤ server/src/routes/payment.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º payment.ts..."
# –ù–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ–º, —Ç–∞–º –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –≤ server/src/tests/payment.test.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º payment.test.ts..."
sed -i 's/data: {/data: {\n        number: 1,/g' server/src/tests/payment.test.ts

echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"

# –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
echo "üî® –°–æ–±–∏—Ä–∞–µ–º —Å–µ—Ä–≤–µ—Ä..."
npm run build:server

echo "üéâ –ì–æ—Ç–æ–≤–æ!"
