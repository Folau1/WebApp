#!/bin/bash

echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ TypeScript –æ—à–∏–±–∫–∏..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/WebApp

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º server/src/index.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º index.ts..."
sed -i 's/app.use((req, res, next) => {/app.use((req, _res, next) => {/g' server/src/index.ts
sed -i 's/app.get.*\/health.*(req, res) => {/app.get('\''\/health'\'', (_req, res) => {/g' server/src/index.ts
sed -i 's/app.use((req, res) => {/app.use((_req, res) => {/g' server/src/index.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º server/src/middleware/auth.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º auth.ts..."
sed -i 's/res: Response,/res: Response,/g' server/src/middleware/auth.ts
sed -i 's/role: user.role/role: user.role as '\''USER'\'' | '\''ADMIN'\''/g' server/src/middleware/auth.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º server/src/middleware/error.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º error.ts..."
sed -i 's/next: NextFunction/next: NextFunction/g' server/src/middleware/error.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º server/src/routes/admin.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º admin.ts..."
sed -i 's/async (req, res, next) => {/async (_req, res, next) => {/g' server/src/routes/admin.ts
sed -i 's/const { id } = req.params;/const { id } = _req.params;/g' server/src/routes/admin.ts
sed -i 's/const data = createProductSchema.parse(req.body);/const data = createProductSchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const data = updateProductSchema.parse(req.body);/const data = updateProductSchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const { stock } = req.body;/const { stock } = _req.body;/g' server/src/routes/admin.ts
sed -i 's/const data = createCategorySchema.parse(req.body);/const data = createCategorySchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const data = updateCategorySchema.parse(req.body);/const data = updateCategorySchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const data = createMediaSchema.parse(req.body);/const data = createMediaSchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const { order } = req.body;/const { order } = _req.body;/g' server/src/routes/admin.ts
sed -i 's/const { mediaIds } = req.body;/const { mediaIds } = _req.body;/g' server/src/routes/admin.ts
sed -i 's/const { productIds, categoryIds, ...data } = createDiscountSchema.parse(req.body);/const { productIds, categoryIds, ...data } = createDiscountSchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const { productIds, categoryIds, ...data } = updateDiscountSchema.parse(req.body);/const { productIds, categoryIds, ...data } = updateDiscountSchema.parse(_req.body);/g' server/src/routes/admin.ts
sed -i 's/const query = orderQuerySchema.parse(req.query);/const query = orderQuerySchema.parse(_req.query);/g' server/src/routes/admin.ts
sed -i 's/const { status } = req.body;/const { status } = _req.body;/g' server/src/routes/admin.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º server/src/routes/catalog.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º catalog.ts..."
sed -i 's/async (req, res, next) => {/async (_req, res, next) => {/g' server/src/routes/catalog.ts
sed -i 's/const query = productQuerySchema.parse(req.query);/const query = productQuerySchema.parse(_req.query);/g' server/src/routes/catalog.ts
sed -i 's/const { slug } = req.params;/const { slug } = _req.params;/g' server/src/routes/catalog.ts

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º server/src/tests/payment.test.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º payment.test.ts..."
sed -i '/number: 1,/d' server/src/tests/payment.test.ts

# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–æ–ª—è –∏–∑ payment.ts
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º payment.ts..."
sed -i '/paidAt: new Date().toISOString(),/d' server/src/routes/payment.ts
sed -i '/canceledAt: new Date().toISOString()/d' server/src/routes/payment.ts

echo "‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"

# –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
echo "üî® –°–æ–±–∏—Ä–∞–µ–º —Å–µ—Ä–≤–µ—Ä..."
npm run build:server

if [ $? -eq 0 ]; then
    echo "üéâ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!"
    
    # –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    echo "üî® –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥..."
    npm run build:web
    npm run build:admin
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
    pm2 start ecosystem.config.js
    systemctl restart nginx
    
    echo "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ!"
else
    echo "‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–∞"
    exit 1
fi
