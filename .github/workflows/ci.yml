name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tgshop_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma Client
      run: npm run prisma:generate

    - name: Run migrations
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tgshop_test?schema=public
      run: npm run prisma:migrate

    - name: Build server
      run: npm run build:server

    - name: Build web app
      run: npm run build:web

    - name: Build admin panel
      run: npm run build:admin

    - name: Build bot
      run: npm run build:bot

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push server
      uses: docker/build-push-action@v4
      with:
        context: ./server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tgshop-server:latest

    - name: Build and push web
      uses: docker/build-push-action@v4
      with:
        context: ./apps/web
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tgshop-web:latest

    - name: Build and push admin
      uses: docker/build-push-action@v4
      with:
        context: ./apps/admin
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tgshop-admin:latest

    - name: Build and push bot
      uses: docker/build-push-action@v4
      with:
        context: ./apps/bot
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tgshop-bot:latest







